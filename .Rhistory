library(ggplot2)
d <- diamonds
head(d)
tail(d)
# Contagem linhas
nrow(d)
# Contagem colunas
ncol(d)
mean(d$price)
median(d$price)
# sumario
summary(d)
d[,7]
mean(d[,7])
hist(d$price)
# sumario
summary(d)
sd(d$price)
# sumario
summary(d)
a1 <- d[1:3000,]
# media
mean(a1)
# media
mean(a1$price)
# mediana
median(a1$price)
sd(a1$price)
summary(c(d,a1))
sample(d)
# Geração de amostra aleatória
set.seed(32)
sample(d)
sample(d)
sample(d)
sample(d)
mean(sample(d$price))
mean(sample(d$price))
# Geração de amostra aleatória
set.seed(31)
mean(sample(d$price))
mean(sample(d$price))
# Geração de amostra aleatória
set.seed(30)
mean(sample(d$price))
# Geração de amostra aleatória
set.seed(3)
mean(sample(d$price))
# Geração de amostra aleatória
set.seed(33)
mean(sample(d$price))
# Geração de amostra aleatória
set.seed(100)
mean(sample(d$price))
mean(3)
mean(3)
# Geração de amostra aleatória
set.seed(33)
sample(3)
# Geração de amostra aleatória
set.seed(100)
sample(3)
va <- sample(53940)
a3 <- d[va[1:3000],]
mean(a3$price)
median(a3$price)
sd(a3$price)
sample(100)
sample(d$price)
hist(d$price)
hist(a3$price)
hist(a3$price)
hist(a1$price)
hist(a2$price)
hist(a3$price)
hist(a1$price)
ggplot(d, aes(price)) +
geom_histogram()
ggplot(d, aes(price)) +
geom_histogram() +
geom_histogram(aes(a3$price))
ggplot(d, aes(price)) +
geom_histogram()
ggplot(d, aes(price)) +
geom_histogram(bins = 10)
ggplot(d, aes(price)) +
geom_histogram(bins = 1000)
ggplot(d, aes(price)) +
geom_histogram(bins = 100)
ggplot(d, aes(price)) +
geom_histogram(bins = 50)
hist(a3$price)
ggplot(d, aes(price)) +
geom_histogram(bins = 50)
boxplot(d$price ~ d$color)
return(abs(scorez)>3)
fctOutlier <- function(x){
scorez <- (x-mean(x))/sd(x)
return(abs(scorez)>3)
}
fctOutlier(d$price)
fctOutlier(d$price) %>% View()
library(tidyverse)
fctOutlier(d$price) %>% View()
d$outlier <- fctOutlier(d$price)
View(d)
(d$price-mean(d$price))/sd(d$price)
(d$price-mean(d$price))/sd(d$price) %>% view()
(d$price-mean(d$price))/sd(d$price) %>% view()
(d$price-mean(d$price))/sd(d$price) %>% View()
(d$price-mean(d$price))/sd(d$price)
d$outlier <- (d$price-mean(d$price))/sd(d$price)
View(d)
d$outlier <- fctOutlier(d$price)
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm, color = "blue")
boxplot(ppm, col = "blue")
getwd()
